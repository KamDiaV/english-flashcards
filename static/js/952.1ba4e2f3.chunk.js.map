{"version":3,"file":"static/js/952.1ba4e2f3.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","_ref","anchorX","id","useId","ref","useRef","nonce","useContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","window","init","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","arguments","_target","isAnimationControls","v","start","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","SubscriptionManager","constructor","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","hueToRgb","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","paddingLeft","paddingRight","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","bottom","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","unmount","prevIsPresent","prevPresenceContext","exitAnimation","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","isObject","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","createDomVisualElement"],"sourceRoot":""}