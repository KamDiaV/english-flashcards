{"version":3,"file":"static/js/952.d61bd5df.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","isObject","value","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","length","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","_ref","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","hueToRgb","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","isHTMLElement","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","createDomVisualElement","PopChildMeasure","React","childRef","offsetParent","parentWidth","offsetWidth","sizeRef","offsetHeight","offsetTop","offsetLeft","PopChild","anchorX","useId","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","contains","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","childId","isComplete","_","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","setRenderedChildren","exitingChildren","nextChildren","forceRender","onExit","isEveryExitComplete","isExitComplete"],"sourceRoot":""}