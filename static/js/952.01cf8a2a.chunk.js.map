{"version":3,"file":"static/js/952.01cf8a2a.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.animationCommitId = this.animationId;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","_ref","anchorX","id","useId","ref","useRef","nonce","useContext","useInsertionEffect","x","concat","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","_objectSpread","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","window","init","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","arguments","_target","isAnimationControls","v","start","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","variants","resolveVariant","getProps","getValueTransition","transition","_transition$key","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","SubscriptionManager","constructor","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","_this$events$renderRe","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","resolveFinalValueInKeyframes","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","transformer","hueToRgb","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","complete","_this$options$onCompl","_this$options3","onComplete","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","paddingLeft","paddingRight","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","bottom","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_objectWithoutProperties","_excluded","_options$duration","_options$ease","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","_visualElement$latest","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","_visualElement$presen","resolved","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","unmount","_this$unmountControls","prevIsPresent","prevPresenceContext","exitAnimation","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","isObject","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","_this$parent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","_this$parent2","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","transformOrigin","corrected","num","renderState","vars","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","_Component$displayNam","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","_visualElement$getVal","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","baseConfig","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","isNone","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$presenceContext","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","_this$projection","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","motion"],"sourceRoot":""}